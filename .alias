##################################################
# development commands
pathappend() {
    # properly append path to end of PATH
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        export PATH="${PATH:+"$PATH:"}$1"  # handles case where path is empty
    fi
}

pathinsert() {
    # properly insert path at beginning of PATH
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        export PATH="$1:$PATH"
    fi
}

alias sudo='sudo '
alias lic_mit="wget -q https://raw.githubusercontent.com/cloudformdesign/licenses/master/LICENSE.MIT -O LICENSE.txt && echo created license"
alias prep="grep '' -n -P -C 2 --exclude-dir '.ropeproject'"
function cless(){
    pygmentize -f terminal "$1" | /usr/bin/less -R
}

##################################################
# Python

export PYTHONSTARTUP="$HOME/.pythonrc.py"
export PYTHONDONTWRITEBYTECODE=0            # prevents .pyc files

# use the local installation of python first
python_root="$HOME/software/pyconda/envs"
py2bin="${python_root}/python2/bin"
py3bin="${python_root}/python3/bin"
pathinsert $py3bin
pathinsert $py2bin
pathinsert "$HOME/bin"

alias py='python3'
alias pyt="$py3bin/py.test --tb short"
alias pytdoc='pyt --doctest-modules'  # don't forget you need to give module path
alias pytdb='pyt -sx --pdb'
alias pdb='py -m ipdb'
alias dbe='py -m cloudtb.dbe'
alias pydev='py setup.py develop'
# http://peterdowns.com/posts/first-time-with-pypi.html
# passwords are stored at .pypirc
alias pypi='py setup.py register -r pypi sdist upload'
alias pypitest='py setup.py register -r pypitest'

alias py2='python2'
alias py2t="$py2bin/py.test --tb short"
alias py2tdoc='py2t --doctest-modules'
alias py2tdb='py2t -sx --pdb'
alias pdb2='py2 -m ipdb'
alias dbe2='py2 -m cloudtb.dbe'
alias py2dev='py2 setup.py develop'

alias py2analyze="pyreverse sf_platform/core/rtfi/ -p dependencies && xdot classes_dependencies.dot &&"
alias pyclean="rm -r ./**/*.pyc"
#alias py2graph="sfood sf_platform/core/rtfi | sfood-graph > graph.dot && xdot graph.dot"

##################################################
# Micro Python
alias upy='micropython'
alias upip='~/projects/micropython/tools/pip-micropython'
# pyboard development
alias pyb="sudo screen /dev/ttyACM0"

##################################################
# Tmux
alias tls="tmux list-sessions"
alias tatt="tmux attach -t"
alias tnew="tmux new -s"
alias trm="tmux kill-session -t"
alias tmv="tmux rename-session -t"  # target-session new-name
alias tkill="tmux kill-server"

##################################################
# Git
alias gpyignore="wget -q https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore -O .gitignore && echo created python .gitignore file"
alias g='git'
alias gs='git status'
alias gst='git status'
alias gss='git status -s'
alias gd='git diff --color-words'
alias gdc='gd --cached'
alias gdn='gd --name-only'
alias gp='git push'
alias gpo='git push origin'
alias gc='git commit'
alias gca='git commit -va'
alias gcam='git commit -vam'
alias gc!='git commit -v --amend'
alias gco='git checkout'
alias gcm='git checkout master'
alias gcb='git checkout -b'
alias gr='git remote'
alias grls='git remote -v'
alias grmv='git remote rename'
alias grrm='git remote remove'
alias gb='git branch'
alias gbd='git branch -d'
alias gconfig='git config --list'
alias glog='git log --oneline --decorate --color --graph'
alias ga='git add'
#alias gap='git add --patch'
#alias gaa='git add --all'
alias gm='git merge'
alias ghash='git rev-parse HEAD'

## Sign and verify commits with GPG
#alias gcs='git commit -S'
#alias gsps='git show --pretty=short --show-signature'

## Sign and verify tags with GPG
#alias gts='git tag -s'
#alias gvt='git verify-tag'



##################################################
# Networking
#ipscan() {
#    sudo nmap -sn $1/24 | grep 'Nmap scan report for'
#}

alias netinfo='echo "## netstat -nr:" && netstat -nr && echo "## ifconfig:" && ifconfig | pcregrep -M "(eth0|wlan0)\s+Link.*\n\s+inet"'

# File System
alias dd="dcfldd"
alias untar="tar -zxvf"

# automatically move ssh public credentials into authorized_keys of system connecting with
ssh_autoauth() {
    tmp_keys="/tmp/${USER}_tmpauthkeys"
    ssh_keys="~/.ssh/authorized_keys"
    command="cat > $tmp_keys && mkdir -p ~/.ssh && cat $tmp_keys >> $ssh_keys && sort -u $ssh_keys > $tmp_keys && mv $tmp_keys $ssh_keys"
    cat ~/.ssh/id_rsa.pub | ssh $1 $command
    ssh "$@"
}


##################################################
# OS specific aliases
if [[ `uname` == 'Darwin' ]]; then
    alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
    alias minicom=/opt/minicom/2.2/bin/minicom
elif [[ `uname` == 'Linux' ]]; then
    # arrow keys are bound to moving words. Use cntrl to 
    bindkey "^L" forward-word
    bindkey "^H" backward-word
    setxkbmap -layout us -option ctrl:nocaps
elif [[ `uname` == 'Cygwin' ]]; then
    :  # pass, none yet
fi

if [[ -e ~/.alias.local ]]; then
    source ~/.alias.local
fi

